!function e(t,o,r){function n(p,l){if(!o[p]){if(!t[p]){var u="function"==typeof require&&require;if(!l&&u)return u(p,!0);if(i)return i(p,!0);var a=new Error("Cannot find module '"+p+"'");throw a.code="MODULE_NOT_FOUND",a}var s=o[p]={exports:{}};t[p][0].call(s.exports,function(e){var o=t[p][1][e];return n(o?o:e)},s,s.exports,e,t,o,r)}return o[p].exports}for(var i="function"==typeof require&&require,p=0;p<r.length;p++)n(r[p]);return n}({1:[function(e,t,o){var r=function(){function e(){this.reloadRequired=!1,this.ctx=SP.ClientContext.get_current(),this.web=this.ctx.get_web(),this.allProperties=this.web.get_allProperties(),this.ctx.load(this.web),this.ctx.load(this.allProperties);var e=Function.createDelegate(this,function(e,t){this.showPropertiesDialog(this.allProperties.get_fieldValues())}),t=Function.createDelegate(this,function(e,t){SP.UI.Notify.addNotification("DARIOFailed to get web properties...<br>"+t.get_message(),!1)});this.ctx.executeQueryAsync(e,t)}return e.prototype.executeChanges=function(){this.ctx.get_web().update(),this.ctx.executeQueryAsync(function(){console.log("Web properties successfully modified~ ")},function(){console.error("Failed to set web property!")})},e.prototype.setProperty=function(e,t){var o=document.getElementById(t).value;this.allProperties.set_item(e,o),this.executeChanges()},e.prototype.deleteProperty=function(e,t){if(confirm("Are you sure you want to remove this property?")){var o=document.getElementById(t).parentNode.parentNode;o.parentNode.removeChild(o),this.allProperties.set_item(e),this.executeChanges(),this.reloadRequired=!0}},e.prototype.addProperty=function(){var e=document.getElementById("newKey").value,t=document.getElementById("newValue").value;document.getElementById("newValue").value="",document.getElementById("newKey").value="",this.allProperties.set_item(e,t),this.executeChanges()},e.prototype.showPropertiesDialog=function(e){var t,o,r=[];for(t in e)e.hasOwnProperty(t)&&(o=typeof e[t],"string"===o&&r.push({prop:t,value:e[t].replace(/"/g,"&quot;")}));r.sort(function(e,t){return e.prop.localeCompare(t.prop)});for(var n=document.createElement("div"),i='<hr><table style="margin: 1em;">',p=0,l=r.length;p<l;p++)i+="<tr>",i+='<td style="text-align: right; padding-top: 15px;"><b>'+r[p].prop+"</b></td>",i+='<td style="padding-top: 15px;"><input id="prop'+p+'" style="width:240px; " type="text" value="'+r[p].value+'"></inpu></td>',i+='<td style="padding-top: 15px;"><button onclick="SpPropAdmin.setProperty(\''+r[p].prop+"','prop"+p+"'); return false;\">Update</button></td>",i+='<td style="padding-top: 15px;"><button style="color: red; min-width: 1em;" onclick="SpPropAdmin.deleteProperty(\''+r[p].prop+"','prop"+p+"'); return false;\">X</button></td>",i+="</tr>";i+="</table>",i+="<hr><h3>Add a new property:</h3>",i+='<div style="margin: 1em; padding-bottom: 2em;">Key: <input id="newKey"></inpu>',i+='&nbsp;&nbsp;&nbsp;Value: <input id="newValue"></inpu>',i+='&nbsp;<button onclick="SpPropAdmin.addProperty(); return false;">Add</button></div>',i+="<div></div>",n.innerHTML=i,SP.UI.ModalDialog.showModalDialog({title:"Property Bag Editor",html:n,showClose:!0,autoSize:!0,dialogReturnValueCallback:function(e){this.reloadRequired&&window.location.reload()}})},e}();SP.SOD.executeFunc("sp.js","SP.ClientContext",function(){SpPropAdmin=new r})},{}]},{},[1]);
//# sourceMappingURL=SpPropertyBag.js.map
